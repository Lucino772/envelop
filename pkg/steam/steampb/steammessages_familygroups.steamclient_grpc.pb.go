// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.1
// source: steammessages_familygroups.steamclient.proto

package steampb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FamilyGroupsClient is the client API for FamilyGroups service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FamilyGroupsClient interface {
	CreateFamilyGroup(ctx context.Context, in *CFamilyGroups_CreateFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_CreateFamilyGroup_Response, error)
	GetFamilyGroup(ctx context.Context, in *CFamilyGroups_GetFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetFamilyGroup_Response, error)
	GetFamilyGroupForUser(ctx context.Context, in *CFamilyGroups_GetFamilyGroupForUser_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetFamilyGroupForUser_Response, error)
	ModifyFamilyGroupDetails(ctx context.Context, in *CFamilyGroups_ModifyFamilyGroupDetails_Request, opts ...grpc.CallOption) (*CFamilyGroups_ModifyFamilyGroupDetails_Response, error)
	InviteToFamilyGroup(ctx context.Context, in *CFamilyGroups_InviteToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_InviteToFamilyGroup_Response, error)
	ConfirmInviteToFamilyGroup(ctx context.Context, in *CFamilyGroups_ConfirmInviteToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ConfirmInviteToFamilyGroup_Response, error)
	ResendInvitationToFamilyGroup(ctx context.Context, in *CFamilyGroups_ResendInvitationToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ResendInvitationToFamilyGroup_Response, error)
	JoinFamilyGroup(ctx context.Context, in *CFamilyGroups_JoinFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_JoinFamilyGroup_Response, error)
	ConfirmJoinFamilyGroup(ctx context.Context, in *CFamilyGroups_ConfirmJoinFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ConfirmJoinFamilyGroup_Response, error)
	RemoveFromFamilyGroup(ctx context.Context, in *CFamilyGroups_RemoveFromFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_RemoveFromFamilyGroup_Response, error)
	CancelFamilyGroupInvite(ctx context.Context, in *CFamilyGroups_CancelFamilyGroupInvite_Request, opts ...grpc.CallOption) (*CFamilyGroups_CancelFamilyGroupInvite_Response, error)
	GetUsersSharingDevice(ctx context.Context, in *CFamilyGroups_GetUsersSharingDevice_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetUsersSharingDevice_Response, error)
	DeleteFamilyGroup(ctx context.Context, in *CFamilyGroups_DeleteFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_DeleteFamilyGroup_Response, error)
	UndeleteFamilyGroup(ctx context.Context, in *CFamilyGroups_UndeleteFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_UndeleteFamilyGroup_Response, error)
	GetPlaytimeSummary(ctx context.Context, in *CFamilyGroups_GetPlaytimeSummary_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPlaytimeSummary_Response, error)
	RequestPurchase(ctx context.Context, in *CFamilyGroups_RequestPurchase_Request, opts ...grpc.CallOption) (*CFamilyGroups_RequestPurchase_Response, error)
	GetPurchaseRequests(ctx context.Context, in *CFamilyGroups_GetPurchaseRequests_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPurchaseRequests_Response, error)
	RespondToRequestedPurchase(ctx context.Context, in *CFamilyGroups_RespondToRequestedPurchase_Request, opts ...grpc.CallOption) (*CFamilyGroups_RespondToRequestedPurchase_Response, error)
	GetChangeLog(ctx context.Context, in *CFamilyGroups_GetChangeLog_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetChangeLog_Response, error)
	SetFamilyCooldownOverrides(ctx context.Context, in *CFamilyGroups_SetFamilyCooldownOverrides_Request, opts ...grpc.CallOption) (*CFamilyGroups_SetFamilyCooldownOverrides_Response, error)
	GetSharedLibraryApps(ctx context.Context, in *CFamilyGroups_GetSharedLibraryApps_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetSharedLibraryApps_Response, error)
	SetPreferredLender(ctx context.Context, in *CFamilyGroups_SetPreferredLender_Request, opts ...grpc.CallOption) (*CFamilyGroups_SetPreferredLender_Response, error)
	GetPreferredLenders(ctx context.Context, in *CFamilyGroups_GetPreferredLenders_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPreferredLenders_Response, error)
	ForceAcceptInvite(ctx context.Context, in *CFamilyGroups_ForceAcceptInvite_Request, opts ...grpc.CallOption) (*CFamilyGroups_ForceAcceptInvite_Response, error)
	GetInviteCheckResults(ctx context.Context, in *CFamilyGroups_GetInviteCheckResults_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetInviteCheckResults_Response, error)
	ClearCooldownSkip(ctx context.Context, in *CFamilyGroups_ClearCooldownSkip_Request, opts ...grpc.CallOption) (*CFamilyGroups_ClearCooldownSkip_Response, error)
}

type familyGroupsClient struct {
	cc grpc.ClientConnInterface
}

func NewFamilyGroupsClient(cc grpc.ClientConnInterface) FamilyGroupsClient {
	return &familyGroupsClient{cc}
}

func (c *familyGroupsClient) CreateFamilyGroup(ctx context.Context, in *CFamilyGroups_CreateFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_CreateFamilyGroup_Response, error) {
	out := new(CFamilyGroups_CreateFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/CreateFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetFamilyGroup(ctx context.Context, in *CFamilyGroups_GetFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetFamilyGroup_Response, error) {
	out := new(CFamilyGroups_GetFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetFamilyGroupForUser(ctx context.Context, in *CFamilyGroups_GetFamilyGroupForUser_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetFamilyGroupForUser_Response, error) {
	out := new(CFamilyGroups_GetFamilyGroupForUser_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetFamilyGroupForUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ModifyFamilyGroupDetails(ctx context.Context, in *CFamilyGroups_ModifyFamilyGroupDetails_Request, opts ...grpc.CallOption) (*CFamilyGroups_ModifyFamilyGroupDetails_Response, error) {
	out := new(CFamilyGroups_ModifyFamilyGroupDetails_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ModifyFamilyGroupDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) InviteToFamilyGroup(ctx context.Context, in *CFamilyGroups_InviteToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_InviteToFamilyGroup_Response, error) {
	out := new(CFamilyGroups_InviteToFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/InviteToFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ConfirmInviteToFamilyGroup(ctx context.Context, in *CFamilyGroups_ConfirmInviteToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ConfirmInviteToFamilyGroup_Response, error) {
	out := new(CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ConfirmInviteToFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ResendInvitationToFamilyGroup(ctx context.Context, in *CFamilyGroups_ResendInvitationToFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ResendInvitationToFamilyGroup_Response, error) {
	out := new(CFamilyGroups_ResendInvitationToFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ResendInvitationToFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) JoinFamilyGroup(ctx context.Context, in *CFamilyGroups_JoinFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_JoinFamilyGroup_Response, error) {
	out := new(CFamilyGroups_JoinFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/JoinFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ConfirmJoinFamilyGroup(ctx context.Context, in *CFamilyGroups_ConfirmJoinFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_ConfirmJoinFamilyGroup_Response, error) {
	out := new(CFamilyGroups_ConfirmJoinFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ConfirmJoinFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) RemoveFromFamilyGroup(ctx context.Context, in *CFamilyGroups_RemoveFromFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_RemoveFromFamilyGroup_Response, error) {
	out := new(CFamilyGroups_RemoveFromFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/RemoveFromFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) CancelFamilyGroupInvite(ctx context.Context, in *CFamilyGroups_CancelFamilyGroupInvite_Request, opts ...grpc.CallOption) (*CFamilyGroups_CancelFamilyGroupInvite_Response, error) {
	out := new(CFamilyGroups_CancelFamilyGroupInvite_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/CancelFamilyGroupInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetUsersSharingDevice(ctx context.Context, in *CFamilyGroups_GetUsersSharingDevice_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetUsersSharingDevice_Response, error) {
	out := new(CFamilyGroups_GetUsersSharingDevice_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetUsersSharingDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) DeleteFamilyGroup(ctx context.Context, in *CFamilyGroups_DeleteFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_DeleteFamilyGroup_Response, error) {
	out := new(CFamilyGroups_DeleteFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/DeleteFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) UndeleteFamilyGroup(ctx context.Context, in *CFamilyGroups_UndeleteFamilyGroup_Request, opts ...grpc.CallOption) (*CFamilyGroups_UndeleteFamilyGroup_Response, error) {
	out := new(CFamilyGroups_UndeleteFamilyGroup_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/UndeleteFamilyGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetPlaytimeSummary(ctx context.Context, in *CFamilyGroups_GetPlaytimeSummary_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPlaytimeSummary_Response, error) {
	out := new(CFamilyGroups_GetPlaytimeSummary_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetPlaytimeSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) RequestPurchase(ctx context.Context, in *CFamilyGroups_RequestPurchase_Request, opts ...grpc.CallOption) (*CFamilyGroups_RequestPurchase_Response, error) {
	out := new(CFamilyGroups_RequestPurchase_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/RequestPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetPurchaseRequests(ctx context.Context, in *CFamilyGroups_GetPurchaseRequests_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPurchaseRequests_Response, error) {
	out := new(CFamilyGroups_GetPurchaseRequests_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetPurchaseRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) RespondToRequestedPurchase(ctx context.Context, in *CFamilyGroups_RespondToRequestedPurchase_Request, opts ...grpc.CallOption) (*CFamilyGroups_RespondToRequestedPurchase_Response, error) {
	out := new(CFamilyGroups_RespondToRequestedPurchase_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/RespondToRequestedPurchase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetChangeLog(ctx context.Context, in *CFamilyGroups_GetChangeLog_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetChangeLog_Response, error) {
	out := new(CFamilyGroups_GetChangeLog_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetChangeLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) SetFamilyCooldownOverrides(ctx context.Context, in *CFamilyGroups_SetFamilyCooldownOverrides_Request, opts ...grpc.CallOption) (*CFamilyGroups_SetFamilyCooldownOverrides_Response, error) {
	out := new(CFamilyGroups_SetFamilyCooldownOverrides_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/SetFamilyCooldownOverrides", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetSharedLibraryApps(ctx context.Context, in *CFamilyGroups_GetSharedLibraryApps_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetSharedLibraryApps_Response, error) {
	out := new(CFamilyGroups_GetSharedLibraryApps_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetSharedLibraryApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) SetPreferredLender(ctx context.Context, in *CFamilyGroups_SetPreferredLender_Request, opts ...grpc.CallOption) (*CFamilyGroups_SetPreferredLender_Response, error) {
	out := new(CFamilyGroups_SetPreferredLender_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/SetPreferredLender", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetPreferredLenders(ctx context.Context, in *CFamilyGroups_GetPreferredLenders_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetPreferredLenders_Response, error) {
	out := new(CFamilyGroups_GetPreferredLenders_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetPreferredLenders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ForceAcceptInvite(ctx context.Context, in *CFamilyGroups_ForceAcceptInvite_Request, opts ...grpc.CallOption) (*CFamilyGroups_ForceAcceptInvite_Response, error) {
	out := new(CFamilyGroups_ForceAcceptInvite_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ForceAcceptInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) GetInviteCheckResults(ctx context.Context, in *CFamilyGroups_GetInviteCheckResults_Request, opts ...grpc.CallOption) (*CFamilyGroups_GetInviteCheckResults_Response, error) {
	out := new(CFamilyGroups_GetInviteCheckResults_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/GetInviteCheckResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClient) ClearCooldownSkip(ctx context.Context, in *CFamilyGroups_ClearCooldownSkip_Request, opts ...grpc.CallOption) (*CFamilyGroups_ClearCooldownSkip_Response, error) {
	out := new(CFamilyGroups_ClearCooldownSkip_Response)
	err := c.cc.Invoke(ctx, "/FamilyGroups/ClearCooldownSkip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FamilyGroupsServer is the server API for FamilyGroups service.
// All implementations must embed UnimplementedFamilyGroupsServer
// for forward compatibility
type FamilyGroupsServer interface {
	CreateFamilyGroup(context.Context, *CFamilyGroups_CreateFamilyGroup_Request) (*CFamilyGroups_CreateFamilyGroup_Response, error)
	GetFamilyGroup(context.Context, *CFamilyGroups_GetFamilyGroup_Request) (*CFamilyGroups_GetFamilyGroup_Response, error)
	GetFamilyGroupForUser(context.Context, *CFamilyGroups_GetFamilyGroupForUser_Request) (*CFamilyGroups_GetFamilyGroupForUser_Response, error)
	ModifyFamilyGroupDetails(context.Context, *CFamilyGroups_ModifyFamilyGroupDetails_Request) (*CFamilyGroups_ModifyFamilyGroupDetails_Response, error)
	InviteToFamilyGroup(context.Context, *CFamilyGroups_InviteToFamilyGroup_Request) (*CFamilyGroups_InviteToFamilyGroup_Response, error)
	ConfirmInviteToFamilyGroup(context.Context, *CFamilyGroups_ConfirmInviteToFamilyGroup_Request) (*CFamilyGroups_ConfirmInviteToFamilyGroup_Response, error)
	ResendInvitationToFamilyGroup(context.Context, *CFamilyGroups_ResendInvitationToFamilyGroup_Request) (*CFamilyGroups_ResendInvitationToFamilyGroup_Response, error)
	JoinFamilyGroup(context.Context, *CFamilyGroups_JoinFamilyGroup_Request) (*CFamilyGroups_JoinFamilyGroup_Response, error)
	ConfirmJoinFamilyGroup(context.Context, *CFamilyGroups_ConfirmJoinFamilyGroup_Request) (*CFamilyGroups_ConfirmJoinFamilyGroup_Response, error)
	RemoveFromFamilyGroup(context.Context, *CFamilyGroups_RemoveFromFamilyGroup_Request) (*CFamilyGroups_RemoveFromFamilyGroup_Response, error)
	CancelFamilyGroupInvite(context.Context, *CFamilyGroups_CancelFamilyGroupInvite_Request) (*CFamilyGroups_CancelFamilyGroupInvite_Response, error)
	GetUsersSharingDevice(context.Context, *CFamilyGroups_GetUsersSharingDevice_Request) (*CFamilyGroups_GetUsersSharingDevice_Response, error)
	DeleteFamilyGroup(context.Context, *CFamilyGroups_DeleteFamilyGroup_Request) (*CFamilyGroups_DeleteFamilyGroup_Response, error)
	UndeleteFamilyGroup(context.Context, *CFamilyGroups_UndeleteFamilyGroup_Request) (*CFamilyGroups_UndeleteFamilyGroup_Response, error)
	GetPlaytimeSummary(context.Context, *CFamilyGroups_GetPlaytimeSummary_Request) (*CFamilyGroups_GetPlaytimeSummary_Response, error)
	RequestPurchase(context.Context, *CFamilyGroups_RequestPurchase_Request) (*CFamilyGroups_RequestPurchase_Response, error)
	GetPurchaseRequests(context.Context, *CFamilyGroups_GetPurchaseRequests_Request) (*CFamilyGroups_GetPurchaseRequests_Response, error)
	RespondToRequestedPurchase(context.Context, *CFamilyGroups_RespondToRequestedPurchase_Request) (*CFamilyGroups_RespondToRequestedPurchase_Response, error)
	GetChangeLog(context.Context, *CFamilyGroups_GetChangeLog_Request) (*CFamilyGroups_GetChangeLog_Response, error)
	SetFamilyCooldownOverrides(context.Context, *CFamilyGroups_SetFamilyCooldownOverrides_Request) (*CFamilyGroups_SetFamilyCooldownOverrides_Response, error)
	GetSharedLibraryApps(context.Context, *CFamilyGroups_GetSharedLibraryApps_Request) (*CFamilyGroups_GetSharedLibraryApps_Response, error)
	SetPreferredLender(context.Context, *CFamilyGroups_SetPreferredLender_Request) (*CFamilyGroups_SetPreferredLender_Response, error)
	GetPreferredLenders(context.Context, *CFamilyGroups_GetPreferredLenders_Request) (*CFamilyGroups_GetPreferredLenders_Response, error)
	ForceAcceptInvite(context.Context, *CFamilyGroups_ForceAcceptInvite_Request) (*CFamilyGroups_ForceAcceptInvite_Response, error)
	GetInviteCheckResults(context.Context, *CFamilyGroups_GetInviteCheckResults_Request) (*CFamilyGroups_GetInviteCheckResults_Response, error)
	ClearCooldownSkip(context.Context, *CFamilyGroups_ClearCooldownSkip_Request) (*CFamilyGroups_ClearCooldownSkip_Response, error)
	mustEmbedUnimplementedFamilyGroupsServer()
}

// UnimplementedFamilyGroupsServer must be embedded to have forward compatible implementations.
type UnimplementedFamilyGroupsServer struct {
}

func (UnimplementedFamilyGroupsServer) CreateFamilyGroup(context.Context, *CFamilyGroups_CreateFamilyGroup_Request) (*CFamilyGroups_CreateFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) GetFamilyGroup(context.Context, *CFamilyGroups_GetFamilyGroup_Request) (*CFamilyGroups_GetFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) GetFamilyGroupForUser(context.Context, *CFamilyGroups_GetFamilyGroupForUser_Request) (*CFamilyGroups_GetFamilyGroupForUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFamilyGroupForUser not implemented")
}
func (UnimplementedFamilyGroupsServer) ModifyFamilyGroupDetails(context.Context, *CFamilyGroups_ModifyFamilyGroupDetails_Request) (*CFamilyGroups_ModifyFamilyGroupDetails_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyFamilyGroupDetails not implemented")
}
func (UnimplementedFamilyGroupsServer) InviteToFamilyGroup(context.Context, *CFamilyGroups_InviteToFamilyGroup_Request) (*CFamilyGroups_InviteToFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteToFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) ConfirmInviteToFamilyGroup(context.Context, *CFamilyGroups_ConfirmInviteToFamilyGroup_Request) (*CFamilyGroups_ConfirmInviteToFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmInviteToFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) ResendInvitationToFamilyGroup(context.Context, *CFamilyGroups_ResendInvitationToFamilyGroup_Request) (*CFamilyGroups_ResendInvitationToFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResendInvitationToFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) JoinFamilyGroup(context.Context, *CFamilyGroups_JoinFamilyGroup_Request) (*CFamilyGroups_JoinFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) ConfirmJoinFamilyGroup(context.Context, *CFamilyGroups_ConfirmJoinFamilyGroup_Request) (*CFamilyGroups_ConfirmJoinFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmJoinFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) RemoveFromFamilyGroup(context.Context, *CFamilyGroups_RemoveFromFamilyGroup_Request) (*CFamilyGroups_RemoveFromFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) CancelFamilyGroupInvite(context.Context, *CFamilyGroups_CancelFamilyGroupInvite_Request) (*CFamilyGroups_CancelFamilyGroupInvite_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelFamilyGroupInvite not implemented")
}
func (UnimplementedFamilyGroupsServer) GetUsersSharingDevice(context.Context, *CFamilyGroups_GetUsersSharingDevice_Request) (*CFamilyGroups_GetUsersSharingDevice_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsersSharingDevice not implemented")
}
func (UnimplementedFamilyGroupsServer) DeleteFamilyGroup(context.Context, *CFamilyGroups_DeleteFamilyGroup_Request) (*CFamilyGroups_DeleteFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) UndeleteFamilyGroup(context.Context, *CFamilyGroups_UndeleteFamilyGroup_Request) (*CFamilyGroups_UndeleteFamilyGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndeleteFamilyGroup not implemented")
}
func (UnimplementedFamilyGroupsServer) GetPlaytimeSummary(context.Context, *CFamilyGroups_GetPlaytimeSummary_Request) (*CFamilyGroups_GetPlaytimeSummary_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaytimeSummary not implemented")
}
func (UnimplementedFamilyGroupsServer) RequestPurchase(context.Context, *CFamilyGroups_RequestPurchase_Request) (*CFamilyGroups_RequestPurchase_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestPurchase not implemented")
}
func (UnimplementedFamilyGroupsServer) GetPurchaseRequests(context.Context, *CFamilyGroups_GetPurchaseRequests_Request) (*CFamilyGroups_GetPurchaseRequests_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPurchaseRequests not implemented")
}
func (UnimplementedFamilyGroupsServer) RespondToRequestedPurchase(context.Context, *CFamilyGroups_RespondToRequestedPurchase_Request) (*CFamilyGroups_RespondToRequestedPurchase_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespondToRequestedPurchase not implemented")
}
func (UnimplementedFamilyGroupsServer) GetChangeLog(context.Context, *CFamilyGroups_GetChangeLog_Request) (*CFamilyGroups_GetChangeLog_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChangeLog not implemented")
}
func (UnimplementedFamilyGroupsServer) SetFamilyCooldownOverrides(context.Context, *CFamilyGroups_SetFamilyCooldownOverrides_Request) (*CFamilyGroups_SetFamilyCooldownOverrides_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFamilyCooldownOverrides not implemented")
}
func (UnimplementedFamilyGroupsServer) GetSharedLibraryApps(context.Context, *CFamilyGroups_GetSharedLibraryApps_Request) (*CFamilyGroups_GetSharedLibraryApps_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharedLibraryApps not implemented")
}
func (UnimplementedFamilyGroupsServer) SetPreferredLender(context.Context, *CFamilyGroups_SetPreferredLender_Request) (*CFamilyGroups_SetPreferredLender_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPreferredLender not implemented")
}
func (UnimplementedFamilyGroupsServer) GetPreferredLenders(context.Context, *CFamilyGroups_GetPreferredLenders_Request) (*CFamilyGroups_GetPreferredLenders_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPreferredLenders not implemented")
}
func (UnimplementedFamilyGroupsServer) ForceAcceptInvite(context.Context, *CFamilyGroups_ForceAcceptInvite_Request) (*CFamilyGroups_ForceAcceptInvite_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceAcceptInvite not implemented")
}
func (UnimplementedFamilyGroupsServer) GetInviteCheckResults(context.Context, *CFamilyGroups_GetInviteCheckResults_Request) (*CFamilyGroups_GetInviteCheckResults_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInviteCheckResults not implemented")
}
func (UnimplementedFamilyGroupsServer) ClearCooldownSkip(context.Context, *CFamilyGroups_ClearCooldownSkip_Request) (*CFamilyGroups_ClearCooldownSkip_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearCooldownSkip not implemented")
}
func (UnimplementedFamilyGroupsServer) mustEmbedUnimplementedFamilyGroupsServer() {}

// UnsafeFamilyGroupsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FamilyGroupsServer will
// result in compilation errors.
type UnsafeFamilyGroupsServer interface {
	mustEmbedUnimplementedFamilyGroupsServer()
}

func RegisterFamilyGroupsServer(s grpc.ServiceRegistrar, srv FamilyGroupsServer) {
	s.RegisterService(&FamilyGroups_ServiceDesc, srv)
}

func _FamilyGroups_CreateFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_CreateFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).CreateFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/CreateFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).CreateFamilyGroup(ctx, req.(*CFamilyGroups_CreateFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetFamilyGroup(ctx, req.(*CFamilyGroups_GetFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetFamilyGroupForUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetFamilyGroupForUser_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetFamilyGroupForUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetFamilyGroupForUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetFamilyGroupForUser(ctx, req.(*CFamilyGroups_GetFamilyGroupForUser_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ModifyFamilyGroupDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ModifyFamilyGroupDetails_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ModifyFamilyGroupDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ModifyFamilyGroupDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ModifyFamilyGroupDetails(ctx, req.(*CFamilyGroups_ModifyFamilyGroupDetails_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_InviteToFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_InviteToFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).InviteToFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/InviteToFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).InviteToFamilyGroup(ctx, req.(*CFamilyGroups_InviteToFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ConfirmInviteToFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ConfirmInviteToFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ConfirmInviteToFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ConfirmInviteToFamilyGroup(ctx, req.(*CFamilyGroups_ConfirmInviteToFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ResendInvitationToFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ResendInvitationToFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ResendInvitationToFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ResendInvitationToFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ResendInvitationToFamilyGroup(ctx, req.(*CFamilyGroups_ResendInvitationToFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_JoinFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_JoinFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).JoinFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/JoinFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).JoinFamilyGroup(ctx, req.(*CFamilyGroups_JoinFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ConfirmJoinFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ConfirmJoinFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ConfirmJoinFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ConfirmJoinFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ConfirmJoinFamilyGroup(ctx, req.(*CFamilyGroups_ConfirmJoinFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_RemoveFromFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_RemoveFromFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).RemoveFromFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/RemoveFromFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).RemoveFromFamilyGroup(ctx, req.(*CFamilyGroups_RemoveFromFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_CancelFamilyGroupInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_CancelFamilyGroupInvite_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).CancelFamilyGroupInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/CancelFamilyGroupInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).CancelFamilyGroupInvite(ctx, req.(*CFamilyGroups_CancelFamilyGroupInvite_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetUsersSharingDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetUsersSharingDevice_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetUsersSharingDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetUsersSharingDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetUsersSharingDevice(ctx, req.(*CFamilyGroups_GetUsersSharingDevice_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_DeleteFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_DeleteFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).DeleteFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/DeleteFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).DeleteFamilyGroup(ctx, req.(*CFamilyGroups_DeleteFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_UndeleteFamilyGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_UndeleteFamilyGroup_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).UndeleteFamilyGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/UndeleteFamilyGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).UndeleteFamilyGroup(ctx, req.(*CFamilyGroups_UndeleteFamilyGroup_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetPlaytimeSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetPlaytimeSummary_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetPlaytimeSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetPlaytimeSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetPlaytimeSummary(ctx, req.(*CFamilyGroups_GetPlaytimeSummary_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_RequestPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_RequestPurchase_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).RequestPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/RequestPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).RequestPurchase(ctx, req.(*CFamilyGroups_RequestPurchase_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetPurchaseRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetPurchaseRequests_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetPurchaseRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetPurchaseRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetPurchaseRequests(ctx, req.(*CFamilyGroups_GetPurchaseRequests_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_RespondToRequestedPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_RespondToRequestedPurchase_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).RespondToRequestedPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/RespondToRequestedPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).RespondToRequestedPurchase(ctx, req.(*CFamilyGroups_RespondToRequestedPurchase_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetChangeLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetChangeLog_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetChangeLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetChangeLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetChangeLog(ctx, req.(*CFamilyGroups_GetChangeLog_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_SetFamilyCooldownOverrides_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_SetFamilyCooldownOverrides_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).SetFamilyCooldownOverrides(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/SetFamilyCooldownOverrides",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).SetFamilyCooldownOverrides(ctx, req.(*CFamilyGroups_SetFamilyCooldownOverrides_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetSharedLibraryApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetSharedLibraryApps_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetSharedLibraryApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetSharedLibraryApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetSharedLibraryApps(ctx, req.(*CFamilyGroups_GetSharedLibraryApps_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_SetPreferredLender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_SetPreferredLender_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).SetPreferredLender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/SetPreferredLender",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).SetPreferredLender(ctx, req.(*CFamilyGroups_SetPreferredLender_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetPreferredLenders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetPreferredLenders_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetPreferredLenders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetPreferredLenders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetPreferredLenders(ctx, req.(*CFamilyGroups_GetPreferredLenders_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ForceAcceptInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ForceAcceptInvite_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ForceAcceptInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ForceAcceptInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ForceAcceptInvite(ctx, req.(*CFamilyGroups_ForceAcceptInvite_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_GetInviteCheckResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_GetInviteCheckResults_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).GetInviteCheckResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/GetInviteCheckResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).GetInviteCheckResults(ctx, req.(*CFamilyGroups_GetInviteCheckResults_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroups_ClearCooldownSkip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroups_ClearCooldownSkip_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsServer).ClearCooldownSkip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroups/ClearCooldownSkip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsServer).ClearCooldownSkip(ctx, req.(*CFamilyGroups_ClearCooldownSkip_Request))
	}
	return interceptor(ctx, in, info, handler)
}

// FamilyGroups_ServiceDesc is the grpc.ServiceDesc for FamilyGroups service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FamilyGroups_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FamilyGroups",
	HandlerType: (*FamilyGroupsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFamilyGroup",
			Handler:    _FamilyGroups_CreateFamilyGroup_Handler,
		},
		{
			MethodName: "GetFamilyGroup",
			Handler:    _FamilyGroups_GetFamilyGroup_Handler,
		},
		{
			MethodName: "GetFamilyGroupForUser",
			Handler:    _FamilyGroups_GetFamilyGroupForUser_Handler,
		},
		{
			MethodName: "ModifyFamilyGroupDetails",
			Handler:    _FamilyGroups_ModifyFamilyGroupDetails_Handler,
		},
		{
			MethodName: "InviteToFamilyGroup",
			Handler:    _FamilyGroups_InviteToFamilyGroup_Handler,
		},
		{
			MethodName: "ConfirmInviteToFamilyGroup",
			Handler:    _FamilyGroups_ConfirmInviteToFamilyGroup_Handler,
		},
		{
			MethodName: "ResendInvitationToFamilyGroup",
			Handler:    _FamilyGroups_ResendInvitationToFamilyGroup_Handler,
		},
		{
			MethodName: "JoinFamilyGroup",
			Handler:    _FamilyGroups_JoinFamilyGroup_Handler,
		},
		{
			MethodName: "ConfirmJoinFamilyGroup",
			Handler:    _FamilyGroups_ConfirmJoinFamilyGroup_Handler,
		},
		{
			MethodName: "RemoveFromFamilyGroup",
			Handler:    _FamilyGroups_RemoveFromFamilyGroup_Handler,
		},
		{
			MethodName: "CancelFamilyGroupInvite",
			Handler:    _FamilyGroups_CancelFamilyGroupInvite_Handler,
		},
		{
			MethodName: "GetUsersSharingDevice",
			Handler:    _FamilyGroups_GetUsersSharingDevice_Handler,
		},
		{
			MethodName: "DeleteFamilyGroup",
			Handler:    _FamilyGroups_DeleteFamilyGroup_Handler,
		},
		{
			MethodName: "UndeleteFamilyGroup",
			Handler:    _FamilyGroups_UndeleteFamilyGroup_Handler,
		},
		{
			MethodName: "GetPlaytimeSummary",
			Handler:    _FamilyGroups_GetPlaytimeSummary_Handler,
		},
		{
			MethodName: "RequestPurchase",
			Handler:    _FamilyGroups_RequestPurchase_Handler,
		},
		{
			MethodName: "GetPurchaseRequests",
			Handler:    _FamilyGroups_GetPurchaseRequests_Handler,
		},
		{
			MethodName: "RespondToRequestedPurchase",
			Handler:    _FamilyGroups_RespondToRequestedPurchase_Handler,
		},
		{
			MethodName: "GetChangeLog",
			Handler:    _FamilyGroups_GetChangeLog_Handler,
		},
		{
			MethodName: "SetFamilyCooldownOverrides",
			Handler:    _FamilyGroups_SetFamilyCooldownOverrides_Handler,
		},
		{
			MethodName: "GetSharedLibraryApps",
			Handler:    _FamilyGroups_GetSharedLibraryApps_Handler,
		},
		{
			MethodName: "SetPreferredLender",
			Handler:    _FamilyGroups_SetPreferredLender_Handler,
		},
		{
			MethodName: "GetPreferredLenders",
			Handler:    _FamilyGroups_GetPreferredLenders_Handler,
		},
		{
			MethodName: "ForceAcceptInvite",
			Handler:    _FamilyGroups_ForceAcceptInvite_Handler,
		},
		{
			MethodName: "GetInviteCheckResults",
			Handler:    _FamilyGroups_GetInviteCheckResults_Handler,
		},
		{
			MethodName: "ClearCooldownSkip",
			Handler:    _FamilyGroups_ClearCooldownSkip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "steammessages_familygroups.steamclient.proto",
}

// FamilyGroupsClientClient is the client API for FamilyGroupsClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FamilyGroupsClientClient interface {
	NotifyRunningApps(ctx context.Context, in *CFamilyGroupsClient_NotifyRunningApps_Notification, opts ...grpc.CallOption) (*NoResponse, error)
	NotifyInviteStatus(ctx context.Context, in *CFamilyGroupsClient_InviteStatus_Notification, opts ...grpc.CallOption) (*NoResponse, error)
	NotifyGroupChanged(ctx context.Context, in *CFamilyGroupsClient_GroupChanged_Notification, opts ...grpc.CallOption) (*NoResponse, error)
}

type familyGroupsClientClient struct {
	cc grpc.ClientConnInterface
}

func NewFamilyGroupsClientClient(cc grpc.ClientConnInterface) FamilyGroupsClientClient {
	return &familyGroupsClientClient{cc}
}

func (c *familyGroupsClientClient) NotifyRunningApps(ctx context.Context, in *CFamilyGroupsClient_NotifyRunningApps_Notification, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/FamilyGroupsClient/NotifyRunningApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClientClient) NotifyInviteStatus(ctx context.Context, in *CFamilyGroupsClient_InviteStatus_Notification, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/FamilyGroupsClient/NotifyInviteStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *familyGroupsClientClient) NotifyGroupChanged(ctx context.Context, in *CFamilyGroupsClient_GroupChanged_Notification, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/FamilyGroupsClient/NotifyGroupChanged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FamilyGroupsClientServer is the server API for FamilyGroupsClient service.
// All implementations must embed UnimplementedFamilyGroupsClientServer
// for forward compatibility
type FamilyGroupsClientServer interface {
	NotifyRunningApps(context.Context, *CFamilyGroupsClient_NotifyRunningApps_Notification) (*NoResponse, error)
	NotifyInviteStatus(context.Context, *CFamilyGroupsClient_InviteStatus_Notification) (*NoResponse, error)
	NotifyGroupChanged(context.Context, *CFamilyGroupsClient_GroupChanged_Notification) (*NoResponse, error)
	mustEmbedUnimplementedFamilyGroupsClientServer()
}

// UnimplementedFamilyGroupsClientServer must be embedded to have forward compatible implementations.
type UnimplementedFamilyGroupsClientServer struct {
}

func (UnimplementedFamilyGroupsClientServer) NotifyRunningApps(context.Context, *CFamilyGroupsClient_NotifyRunningApps_Notification) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyRunningApps not implemented")
}
func (UnimplementedFamilyGroupsClientServer) NotifyInviteStatus(context.Context, *CFamilyGroupsClient_InviteStatus_Notification) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyInviteStatus not implemented")
}
func (UnimplementedFamilyGroupsClientServer) NotifyGroupChanged(context.Context, *CFamilyGroupsClient_GroupChanged_Notification) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyGroupChanged not implemented")
}
func (UnimplementedFamilyGroupsClientServer) mustEmbedUnimplementedFamilyGroupsClientServer() {}

// UnsafeFamilyGroupsClientServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FamilyGroupsClientServer will
// result in compilation errors.
type UnsafeFamilyGroupsClientServer interface {
	mustEmbedUnimplementedFamilyGroupsClientServer()
}

func RegisterFamilyGroupsClientServer(s grpc.ServiceRegistrar, srv FamilyGroupsClientServer) {
	s.RegisterService(&FamilyGroupsClient_ServiceDesc, srv)
}

func _FamilyGroupsClient_NotifyRunningApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroupsClient_NotifyRunningApps_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsClientServer).NotifyRunningApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroupsClient/NotifyRunningApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsClientServer).NotifyRunningApps(ctx, req.(*CFamilyGroupsClient_NotifyRunningApps_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroupsClient_NotifyInviteStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroupsClient_InviteStatus_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsClientServer).NotifyInviteStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroupsClient/NotifyInviteStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsClientServer).NotifyInviteStatus(ctx, req.(*CFamilyGroupsClient_InviteStatus_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _FamilyGroupsClient_NotifyGroupChanged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CFamilyGroupsClient_GroupChanged_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FamilyGroupsClientServer).NotifyGroupChanged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FamilyGroupsClient/NotifyGroupChanged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FamilyGroupsClientServer).NotifyGroupChanged(ctx, req.(*CFamilyGroupsClient_GroupChanged_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

// FamilyGroupsClient_ServiceDesc is the grpc.ServiceDesc for FamilyGroupsClient service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FamilyGroupsClient_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FamilyGroupsClient",
	HandlerType: (*FamilyGroupsClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyRunningApps",
			Handler:    _FamilyGroupsClient_NotifyRunningApps_Handler,
		},
		{
			MethodName: "NotifyInviteStatus",
			Handler:    _FamilyGroupsClient_NotifyInviteStatus_Handler,
		},
		{
			MethodName: "NotifyGroupChanged",
			Handler:    _FamilyGroupsClient_NotifyGroupChanged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "steammessages_familygroups.steamclient.proto",
}
