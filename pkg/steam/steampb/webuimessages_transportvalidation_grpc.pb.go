// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.1
// source: webuimessages_transportvalidation.proto

package steampb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TransportValidationClient is the client API for TransportValidation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransportValidationClient interface {
	AppendToString(ctx context.Context, in *CTransportValidation_AppendToString_Request, opts ...grpc.CallOption) (*CTransportValidation_AppendToString_Response, error)
	AddNumbers(ctx context.Context, in *CTransportValidation_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidation_AddNumbers_Response, error)
	AddNumbersStatic(ctx context.Context, in *CTransportValidation_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidation_AddNumbers_Response, error)
	NotifyText(ctx context.Context, in *CTransportValidation_NotifyText_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error)
	NotifyNumber(ctx context.Context, in *CTransportValidation_NotifyNumber_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error)
	GetLastNotifyNumber(ctx context.Context, in *CTransportValidation_GetLastNotifyNumber_Request, opts ...grpc.CallOption) (*CTransportValidation_GetLastNotifyNumber_Response, error)
	NotifySyntheticEvent(ctx context.Context, in *CTransportValidation_NotifySyntheticEvent_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error)
	TriggerSyntheticEvents(ctx context.Context, in *CTransportValidation_TriggerSyntheticEvents_Request, opts ...grpc.CallOption) (*CTransportValidation_TriggerSyntheticEvents_Response, error)
	CountOrderedBytes(ctx context.Context, in *CTransportValidation_CountOrderedBytes_Request, opts ...grpc.CallOption) (*CTransportValidation_CountOrderedBytes_Response, error)
	ThreadedCount(ctx context.Context, in *CTransportValidation_ThreadedCount_Request, opts ...grpc.CallOption) (*CTransportValidation_ThreadedCount_Response, error)
	NotifyCount(ctx context.Context, in *CTransportValidation_NotifyCount_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error)
	RequestInvalidBool(ctx context.Context, in *CTransportValidation_RequestInvalidBool_Request, opts ...grpc.CallOption) (*CTransportValidation_RequestInvalidBool_Response, error)
}

type transportValidationClient struct {
	cc grpc.ClientConnInterface
}

func NewTransportValidationClient(cc grpc.ClientConnInterface) TransportValidationClient {
	return &transportValidationClient{cc}
}

func (c *transportValidationClient) AppendToString(ctx context.Context, in *CTransportValidation_AppendToString_Request, opts ...grpc.CallOption) (*CTransportValidation_AppendToString_Response, error) {
	out := new(CTransportValidation_AppendToString_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/AppendToString", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) AddNumbers(ctx context.Context, in *CTransportValidation_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidation_AddNumbers_Response, error) {
	out := new(CTransportValidation_AddNumbers_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/AddNumbers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) AddNumbersStatic(ctx context.Context, in *CTransportValidation_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidation_AddNumbers_Response, error) {
	out := new(CTransportValidation_AddNumbers_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/AddNumbersStatic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) NotifyText(ctx context.Context, in *CTransportValidation_NotifyText_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error) {
	out := new(WebUINoResponse)
	err := c.cc.Invoke(ctx, "/TransportValidation/NotifyText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) NotifyNumber(ctx context.Context, in *CTransportValidation_NotifyNumber_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error) {
	out := new(WebUINoResponse)
	err := c.cc.Invoke(ctx, "/TransportValidation/NotifyNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) GetLastNotifyNumber(ctx context.Context, in *CTransportValidation_GetLastNotifyNumber_Request, opts ...grpc.CallOption) (*CTransportValidation_GetLastNotifyNumber_Response, error) {
	out := new(CTransportValidation_GetLastNotifyNumber_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/GetLastNotifyNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) NotifySyntheticEvent(ctx context.Context, in *CTransportValidation_NotifySyntheticEvent_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error) {
	out := new(WebUINoResponse)
	err := c.cc.Invoke(ctx, "/TransportValidation/NotifySyntheticEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) TriggerSyntheticEvents(ctx context.Context, in *CTransportValidation_TriggerSyntheticEvents_Request, opts ...grpc.CallOption) (*CTransportValidation_TriggerSyntheticEvents_Response, error) {
	out := new(CTransportValidation_TriggerSyntheticEvents_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/TriggerSyntheticEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) CountOrderedBytes(ctx context.Context, in *CTransportValidation_CountOrderedBytes_Request, opts ...grpc.CallOption) (*CTransportValidation_CountOrderedBytes_Response, error) {
	out := new(CTransportValidation_CountOrderedBytes_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/CountOrderedBytes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) ThreadedCount(ctx context.Context, in *CTransportValidation_ThreadedCount_Request, opts ...grpc.CallOption) (*CTransportValidation_ThreadedCount_Response, error) {
	out := new(CTransportValidation_ThreadedCount_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/ThreadedCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) NotifyCount(ctx context.Context, in *CTransportValidation_NotifyCount_Notification, opts ...grpc.CallOption) (*WebUINoResponse, error) {
	out := new(WebUINoResponse)
	err := c.cc.Invoke(ctx, "/TransportValidation/NotifyCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transportValidationClient) RequestInvalidBool(ctx context.Context, in *CTransportValidation_RequestInvalidBool_Request, opts ...grpc.CallOption) (*CTransportValidation_RequestInvalidBool_Response, error) {
	out := new(CTransportValidation_RequestInvalidBool_Response)
	err := c.cc.Invoke(ctx, "/TransportValidation/RequestInvalidBool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransportValidationServer is the server API for TransportValidation service.
// All implementations must embed UnimplementedTransportValidationServer
// for forward compatibility
type TransportValidationServer interface {
	AppendToString(context.Context, *CTransportValidation_AppendToString_Request) (*CTransportValidation_AppendToString_Response, error)
	AddNumbers(context.Context, *CTransportValidation_AddNumbers_Request) (*CTransportValidation_AddNumbers_Response, error)
	AddNumbersStatic(context.Context, *CTransportValidation_AddNumbers_Request) (*CTransportValidation_AddNumbers_Response, error)
	NotifyText(context.Context, *CTransportValidation_NotifyText_Notification) (*WebUINoResponse, error)
	NotifyNumber(context.Context, *CTransportValidation_NotifyNumber_Notification) (*WebUINoResponse, error)
	GetLastNotifyNumber(context.Context, *CTransportValidation_GetLastNotifyNumber_Request) (*CTransportValidation_GetLastNotifyNumber_Response, error)
	NotifySyntheticEvent(context.Context, *CTransportValidation_NotifySyntheticEvent_Notification) (*WebUINoResponse, error)
	TriggerSyntheticEvents(context.Context, *CTransportValidation_TriggerSyntheticEvents_Request) (*CTransportValidation_TriggerSyntheticEvents_Response, error)
	CountOrderedBytes(context.Context, *CTransportValidation_CountOrderedBytes_Request) (*CTransportValidation_CountOrderedBytes_Response, error)
	ThreadedCount(context.Context, *CTransportValidation_ThreadedCount_Request) (*CTransportValidation_ThreadedCount_Response, error)
	NotifyCount(context.Context, *CTransportValidation_NotifyCount_Notification) (*WebUINoResponse, error)
	RequestInvalidBool(context.Context, *CTransportValidation_RequestInvalidBool_Request) (*CTransportValidation_RequestInvalidBool_Response, error)
	mustEmbedUnimplementedTransportValidationServer()
}

// UnimplementedTransportValidationServer must be embedded to have forward compatible implementations.
type UnimplementedTransportValidationServer struct {
}

func (UnimplementedTransportValidationServer) AppendToString(context.Context, *CTransportValidation_AppendToString_Request) (*CTransportValidation_AppendToString_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendToString not implemented")
}
func (UnimplementedTransportValidationServer) AddNumbers(context.Context, *CTransportValidation_AddNumbers_Request) (*CTransportValidation_AddNumbers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNumbers not implemented")
}
func (UnimplementedTransportValidationServer) AddNumbersStatic(context.Context, *CTransportValidation_AddNumbers_Request) (*CTransportValidation_AddNumbers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNumbersStatic not implemented")
}
func (UnimplementedTransportValidationServer) NotifyText(context.Context, *CTransportValidation_NotifyText_Notification) (*WebUINoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyText not implemented")
}
func (UnimplementedTransportValidationServer) NotifyNumber(context.Context, *CTransportValidation_NotifyNumber_Notification) (*WebUINoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyNumber not implemented")
}
func (UnimplementedTransportValidationServer) GetLastNotifyNumber(context.Context, *CTransportValidation_GetLastNotifyNumber_Request) (*CTransportValidation_GetLastNotifyNumber_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastNotifyNumber not implemented")
}
func (UnimplementedTransportValidationServer) NotifySyntheticEvent(context.Context, *CTransportValidation_NotifySyntheticEvent_Notification) (*WebUINoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifySyntheticEvent not implemented")
}
func (UnimplementedTransportValidationServer) TriggerSyntheticEvents(context.Context, *CTransportValidation_TriggerSyntheticEvents_Request) (*CTransportValidation_TriggerSyntheticEvents_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerSyntheticEvents not implemented")
}
func (UnimplementedTransportValidationServer) CountOrderedBytes(context.Context, *CTransportValidation_CountOrderedBytes_Request) (*CTransportValidation_CountOrderedBytes_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountOrderedBytes not implemented")
}
func (UnimplementedTransportValidationServer) ThreadedCount(context.Context, *CTransportValidation_ThreadedCount_Request) (*CTransportValidation_ThreadedCount_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThreadedCount not implemented")
}
func (UnimplementedTransportValidationServer) NotifyCount(context.Context, *CTransportValidation_NotifyCount_Notification) (*WebUINoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyCount not implemented")
}
func (UnimplementedTransportValidationServer) RequestInvalidBool(context.Context, *CTransportValidation_RequestInvalidBool_Request) (*CTransportValidation_RequestInvalidBool_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestInvalidBool not implemented")
}
func (UnimplementedTransportValidationServer) mustEmbedUnimplementedTransportValidationServer() {}

// UnsafeTransportValidationServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransportValidationServer will
// result in compilation errors.
type UnsafeTransportValidationServer interface {
	mustEmbedUnimplementedTransportValidationServer()
}

func RegisterTransportValidationServer(s grpc.ServiceRegistrar, srv TransportValidationServer) {
	s.RegisterService(&TransportValidation_ServiceDesc, srv)
}

func _TransportValidation_AppendToString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_AppendToString_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).AppendToString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/AppendToString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).AppendToString(ctx, req.(*CTransportValidation_AppendToString_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_AddNumbers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_AddNumbers_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).AddNumbers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/AddNumbers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).AddNumbers(ctx, req.(*CTransportValidation_AddNumbers_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_AddNumbersStatic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_AddNumbers_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).AddNumbersStatic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/AddNumbersStatic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).AddNumbersStatic(ctx, req.(*CTransportValidation_AddNumbers_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_NotifyText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_NotifyText_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).NotifyText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/NotifyText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).NotifyText(ctx, req.(*CTransportValidation_NotifyText_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_NotifyNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_NotifyNumber_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).NotifyNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/NotifyNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).NotifyNumber(ctx, req.(*CTransportValidation_NotifyNumber_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_GetLastNotifyNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_GetLastNotifyNumber_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).GetLastNotifyNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/GetLastNotifyNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).GetLastNotifyNumber(ctx, req.(*CTransportValidation_GetLastNotifyNumber_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_NotifySyntheticEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_NotifySyntheticEvent_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).NotifySyntheticEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/NotifySyntheticEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).NotifySyntheticEvent(ctx, req.(*CTransportValidation_NotifySyntheticEvent_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_TriggerSyntheticEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_TriggerSyntheticEvents_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).TriggerSyntheticEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/TriggerSyntheticEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).TriggerSyntheticEvents(ctx, req.(*CTransportValidation_TriggerSyntheticEvents_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_CountOrderedBytes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_CountOrderedBytes_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).CountOrderedBytes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/CountOrderedBytes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).CountOrderedBytes(ctx, req.(*CTransportValidation_CountOrderedBytes_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_ThreadedCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_ThreadedCount_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).ThreadedCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/ThreadedCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).ThreadedCount(ctx, req.(*CTransportValidation_ThreadedCount_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_NotifyCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_NotifyCount_Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).NotifyCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/NotifyCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).NotifyCount(ctx, req.(*CTransportValidation_NotifyCount_Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransportValidation_RequestInvalidBool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidation_RequestInvalidBool_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationServer).RequestInvalidBool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidation/RequestInvalidBool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationServer).RequestInvalidBool(ctx, req.(*CTransportValidation_RequestInvalidBool_Request))
	}
	return interceptor(ctx, in, info, handler)
}

// TransportValidation_ServiceDesc is the grpc.ServiceDesc for TransportValidation service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TransportValidation_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TransportValidation",
	HandlerType: (*TransportValidationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendToString",
			Handler:    _TransportValidation_AppendToString_Handler,
		},
		{
			MethodName: "AddNumbers",
			Handler:    _TransportValidation_AddNumbers_Handler,
		},
		{
			MethodName: "AddNumbersStatic",
			Handler:    _TransportValidation_AddNumbersStatic_Handler,
		},
		{
			MethodName: "NotifyText",
			Handler:    _TransportValidation_NotifyText_Handler,
		},
		{
			MethodName: "NotifyNumber",
			Handler:    _TransportValidation_NotifyNumber_Handler,
		},
		{
			MethodName: "GetLastNotifyNumber",
			Handler:    _TransportValidation_GetLastNotifyNumber_Handler,
		},
		{
			MethodName: "NotifySyntheticEvent",
			Handler:    _TransportValidation_NotifySyntheticEvent_Handler,
		},
		{
			MethodName: "TriggerSyntheticEvents",
			Handler:    _TransportValidation_TriggerSyntheticEvents_Handler,
		},
		{
			MethodName: "CountOrderedBytes",
			Handler:    _TransportValidation_CountOrderedBytes_Handler,
		},
		{
			MethodName: "ThreadedCount",
			Handler:    _TransportValidation_ThreadedCount_Handler,
		},
		{
			MethodName: "NotifyCount",
			Handler:    _TransportValidation_NotifyCount_Handler,
		},
		{
			MethodName: "RequestInvalidBool",
			Handler:    _TransportValidation_RequestInvalidBool_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webuimessages_transportvalidation.proto",
}

// TransportValidationClientClient is the client API for TransportValidationClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransportValidationClientClient interface {
	AddNumbers(ctx context.Context, in *CTransportValidationClient_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidationClient_AddNumbers_Response, error)
}

type transportValidationClientClient struct {
	cc grpc.ClientConnInterface
}

func NewTransportValidationClientClient(cc grpc.ClientConnInterface) TransportValidationClientClient {
	return &transportValidationClientClient{cc}
}

func (c *transportValidationClientClient) AddNumbers(ctx context.Context, in *CTransportValidationClient_AddNumbers_Request, opts ...grpc.CallOption) (*CTransportValidationClient_AddNumbers_Response, error) {
	out := new(CTransportValidationClient_AddNumbers_Response)
	err := c.cc.Invoke(ctx, "/TransportValidationClient/AddNumbers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransportValidationClientServer is the server API for TransportValidationClient service.
// All implementations must embed UnimplementedTransportValidationClientServer
// for forward compatibility
type TransportValidationClientServer interface {
	AddNumbers(context.Context, *CTransportValidationClient_AddNumbers_Request) (*CTransportValidationClient_AddNumbers_Response, error)
	mustEmbedUnimplementedTransportValidationClientServer()
}

// UnimplementedTransportValidationClientServer must be embedded to have forward compatible implementations.
type UnimplementedTransportValidationClientServer struct {
}

func (UnimplementedTransportValidationClientServer) AddNumbers(context.Context, *CTransportValidationClient_AddNumbers_Request) (*CTransportValidationClient_AddNumbers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNumbers not implemented")
}
func (UnimplementedTransportValidationClientServer) mustEmbedUnimplementedTransportValidationClientServer() {
}

// UnsafeTransportValidationClientServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransportValidationClientServer will
// result in compilation errors.
type UnsafeTransportValidationClientServer interface {
	mustEmbedUnimplementedTransportValidationClientServer()
}

func RegisterTransportValidationClientServer(s grpc.ServiceRegistrar, srv TransportValidationClientServer) {
	s.RegisterService(&TransportValidationClient_ServiceDesc, srv)
}

func _TransportValidationClient_AddNumbers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CTransportValidationClient_AddNumbers_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransportValidationClientServer).AddNumbers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TransportValidationClient/AddNumbers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransportValidationClientServer).AddNumbers(ctx, req.(*CTransportValidationClient_AddNumbers_Request))
	}
	return interceptor(ctx, in, info, handler)
}

// TransportValidationClient_ServiceDesc is the grpc.ServiceDesc for TransportValidationClient service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TransportValidationClient_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TransportValidationClient",
	HandlerType: (*TransportValidationClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNumbers",
			Handler:    _TransportValidationClient_AddNumbers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webuimessages_transportvalidation.proto",
}
